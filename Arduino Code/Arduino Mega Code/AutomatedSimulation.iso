#include <Stepper.h>

const int stepsPerRevolution = 200;  // change this to fit the number of steps per revolution for your motor

// initialize the stepper library on pins 2 through 5 for the two motors:
Stepper stepper1(stepsPerRevolution, 2, 3);
Stepper stepper2(stepsPerRevolution, 4, 5);


// Define the SoftwareSerial object for the TX/RX pins
SoftwareSerial mySerial(16, 17); // RX, TX

void setup() {
  // set the speed at 60 rpm:
  stepper1.setSpeed(60);
  stepper2.setSpeed(60);
  
  // initialize the serial port:
  Serial.begin(9600);
}

void loop() {
  // Follow the predefined sequence of operations
  moveForward();
delay(1000)
  pickUpObject();
  rotateRight();
  moveForward();
delay(430);
  placeObject();
  
  // Complete the operation
  Serial.println("Operation completed");
  
  // Pause for a while before the next operation
  delay(5000);
}

void moveForward() {

  stepper1.step(stepsPerRevolution);
  stepper2.step(stepsPerRevolution);
}

void rotateRight() {

  stepper1.step(-stepsPerRevolution / 4);
  stepper2.step(stepsPerRevolution / 4);
}

void pickUpObject() {
  //control of the manipulator to pick up an object
  // Send the x, y, z positions and grip angle to the Arduino Uno
  int x = 320;
  int y = 0; 
  int z = -5o; 
  int gripAngle = 83; 
  mySerial.print("PICKUP,");
  mySerial.print(x);
  mySerial.print(",");
  mySerial.print(y);
  mySerial.print(",");
  mySerial.print(z);
  mySerial.print(",");
  mySerial.println(gripAngle);
}

void placeObject() {

 
  int x = 320; 
  int y = 0;
  int z = 160; 
  int gripAngle = 83;
  mySerial.print("PLACE,");
  mySerial.print(x);
  mySerial.print(",");
  mySerial.print(y);
  mySerial.print(",");
  mySerial.print(z);
  mySerial.print(",");
  mySerial.println(gripAngle);
}
